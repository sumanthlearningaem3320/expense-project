- name: disablenodejs
  ansible.builtin.shell: dnf module disable nodejs -y
- name: enable nodejs
  ansible.builtin.shell: dnf module enable nodejs:18 -y
- name: install nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: present
- name: copy backend service
  ansible.builtin.copy:
    src: backend.service
    dest: /etc/systemd/system/backend.service
- name: add application user
  ansible.builtin.user:
    name: expense
- name: delete old app content
  ansible.builtin.file:
    path: /app
    state: absent
- name: create app directory
  ansible.builtin.file:
    path: /app
    state: directory
- name: downlad the content
  ansible.builtin.unarchive:
    src: https://expense-artifacts.s3.amazonaws.com/backend.zip
    dest: /app
    remote_src: yes
- name: download nodejs dependencies
  ansible.builtin.shell: npm install
  args:
    chdir: /app
- name: install mysql
  ansible.builtin.dnf:
    name: mysql
    state: present
- name: load schema
  ansible.builtin.shell: mysql -h mysql-dev.sumanthguntur320.online -uroot -p{{mysql_root_password}} < /app/schema/backend.sql
- name: restart mysql
  ansible.builtin.systemd:
    name: backend
    state: restarted
    enabled: yes
    daemon-reload: yes